// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`screens/OpenSourceProjectScreen 렌더링 되었을 때 스냅샷이 일치해야 한다 1`] = `
<View
  style={
    [
      {},
      {
        "flex": 1,
      },
      undefined,
      {
        "paddingBottom": 0,
        "paddingLeft": 0,
        "paddingRight": 0,
        "paddingTop": 0,
      },
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "alignSelf": "center",
          "backgroundColor": "#ffffff",
          "flex": 1,
          "marginHorizontal": "auto",
          "maxWidth": 600,
          "paddingHorizontal": 16,
          "width": "100%",
        },
        undefined,
        {},
      ]
    }
  >
    <View
      style={
        [
          {},
          {
            "marginHorizontal": -16,
            "zIndex": 3,
          },
          undefined,
          {},
          {},
        ]
      }
    >
      <View
        style={
          [
            {},
            {
              "alignItems": "center",
              "backgroundColor": "#ffffff",
              "flexDirection": "row",
              "height": 56,
              "justifyContent": "space-between",
              "paddingHorizontal": 16,
              "position": "relative",
            },
            undefined,
            {},
            {},
          ]
        }
      >
        <View
          style={
            [
              {
                "flex": 1,
              },
              {
                "bottom": 0,
                "elevation": 3,
                "height": 16,
                "left": 0,
                "marginBottom": -16,
                "position": "absolute",
                "right": 0,
                "zIndex": 3,
              },
              undefined,
              {},
              {},
            ]
          }
        >
          <RNSVGSvgView
            align="none"
            bbHeight="100%"
            bbWidth="100%"
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "flex": 0,
                  "height": "100%",
                  "width": "100%",
                },
              ]
            }
            vbHeight={100}
            vbWidth={100}
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGDefs>
                <RNSVGLinearGradient
                  gradient={
                    [
                      0,
                      -1,
                      1,
                      16777215,
                    ]
                  }
                  gradientTransform={
                    [
                      6.123233995736766e-17,
                      1,
                      -1,
                      6.123233995736766e-17,
                      0,
                      0,
                    ]
                  }
                  gradientUnits={1}
                  name="g"
                  x1="0"
                  x2="100"
                  y1="0"
                  y2="0"
                />
              </RNSVGDefs>
              <RNSVGRect
                fill={
                  {
                    "brushRef": "g",
                    "type": 1,
                  }
                }
                height="100%"
                propList={
                  [
                    "fill",
                  ]
                }
                width="100%"
                x="0"
                y="0"
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            [
              {},
              {
                "height": 30,
                "width": 30,
              },
              undefined,
              {},
              {},
            ]
          }
        >
          <View
            accessibilityHint="Go back"
            accessibilityLabel="Go back"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            disableHaptic={false}
            focusable={true}
            hitSlop={10}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            showCursor={true}
            style={
              [
                {},
                {
                  "alignItems": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": "100%",
                },
                undefined,
                {},
                {},
              ]
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="24"
              bbWidth="24"
              fill="none"
              focusable={false}
              height={24}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "flex": 0,
                    "height": 24,
                    "width": 24,
                  },
                ]
              }
              vbHeight={24}
              vbWidth={24}
              width={24}
            >
              <RNSVGGroup
                fill={null}
                propList={
                  [
                    "fill",
                  ]
                }
              >
                <RNSVGPath
                  d="M15 18l-6-6 6-6"
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeLinecap",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4281216558,
                      "type": 0,
                    }
                  }
                  strokeLinecap={1}
                  strokeWidth="2"
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
        <Text
          accessibilityHint="Title"
          accessibilityLabel="Open source project"
          style={
            [
              {
                "fontFamily": "TmoneyRoundWind-ExtraBold",
                "fontSize": 24,
                "marginVertical": 0,
              },
              undefined,
              {
                "color": "#2e2e2e",
              },
            ]
          }
        >
          Open source project
        </Text>
        <View
          style={
            [
              {},
              {
                "height": 30,
                "width": 30,
              },
              undefined,
              {},
              {},
            ]
          }
        />
      </View>
    </View>
    <RCTScrollView
      collapsable={false}
      onMoveShouldSetResponderCapture={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      scrollEventThrottle={0.0001}
      style={
        {
          "flex": 1,
          "marginHorizontal": -16,
          "paddingHorizontal": 16,
        }
      }
    >
      <View>
        <View
          style={
            [
              {},
              {
                "flex": 1,
                "gap": 16,
              },
              undefined,
              {},
              {},
            ]
          }
        >
          <View
            style={
              [
                {},
                {
                  "flex": 1,
                  "paddingVertical": 16,
                },
                undefined,
                {},
                {},
              ]
            }
          >
            <View
              accessibilityHint="Up source code repository"
              accessibilityLabel="Up source code repository"
              accessibilityRole="button"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              disableHaptic={false}
              focusable={true}
              hitSlop={10}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "height": 56,
                    "position": "relative",
                  },
                  undefined,
                  {},
                ]
              }
            >
              <View
                disabled={false}
                style={
                  [
                    {},
                    {
                      "backgroundColor": "#2e2e2e",
                      "borderRadius": 8,
                      "bottom": -5,
                      "height": "100%",
                      "left": 0,
                      "position": "absolute",
                      "width": "100%",
                    },
                    undefined,
                    {},
                    {},
                  ]
                }
              />
              <View
                collapsable={false}
                color="$blue"
                disabled={false}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "#2196f3",
                    "borderColor": "#2e2e2e",
                    "borderRadius": 8,
                    "borderWidth": 2,
                    "display": "flex",
                    "flexDirection": "row",
                    "height": "100%",
                    "justifyContent": "space-between",
                    "marginTop": 0,
                    "paddingHorizontal": 16,
                    "width": "100%",
                  }
                }
              >
                <View
                  disabled={false}
                  hasAdornment={false}
                  style={
                    [
                      {},
                      {
                        "height": "100%",
                        "justifyContent": "center",
                        "opacity": 1,
                        "width": "100%",
                      },
                      undefined,
                      {},
                      {},
                    ]
                  }
                >
                  <Text
                    isLightBackground={false}
                    style={
                      [
                        {
                          "fontFamily": "TmoneyRoundWind-Regular",
                          "fontSize": 16,
                        },
                        {
                          "color": "#ffffff",
                          "fontFamily": "TmoneyRoundWind-ExtraBold",
                          "fontSize": 24,
                          "marginVertical": 0,
                          "textAlign": "center",
                        },
                        undefined,
                        {},
                        {},
                      ]
                    }
                  >
                    Up source code repository
                  </Text>
                </View>
              </View>
              <View
                style={
                  [
                    {},
                    {
                      "borderRadius": 8,
                      "bottom": -5,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    undefined,
                    {},
                    {},
                  ]
                }
              >
                <View
                  collapsable={false}
                  isLightBackground={false}
                  style={
                    {
                      "backgroundColor": "#ffffff",
                      "borderRadius": 8,
                      "height": "100%",
                      "marginTop": 0,
                      "opacity": 0.2,
                      "width": "0%",
                    }
                  }
                />
              </View>
            </View>
          </View>
          <View
            accessibilityHint="@react-native-async-storage/async-storage"
            accessibilityLabel="@react-native-async-storage/async-storage"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              @react-native-async-storage/async-storage
            </Text>
          </View>
          <View
            accessibilityHint="@react-native-community/datetimepicker"
            accessibilityLabel="@react-native-community/datetimepicker"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              @react-native-community/datetimepicker
            </Text>
          </View>
          <View
            accessibilityHint="@react-native-community/push-notification-ios"
            accessibilityLabel="@react-native-community/push-notification-ios"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              @react-native-community/push-notification-ios
            </Text>
          </View>
          <View
            accessibilityHint="@react-native-community/slider"
            accessibilityLabel="@react-native-community/slider"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              @react-native-community/slider
            </Text>
          </View>
          <View
            accessibilityHint="@react-navigation/bottom-tabs"
            accessibilityLabel="@react-navigation/bottom-tabs"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              @react-navigation/bottom-tabs
            </Text>
          </View>
          <View
            accessibilityHint="@react-navigation/native"
            accessibilityLabel="@react-navigation/native"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              @react-navigation/native
            </Text>
          </View>
          <View
            accessibilityHint="@react-navigation/stack"
            accessibilityLabel="@react-navigation/stack"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              @react-navigation/stack
            </Text>
          </View>
          <View
            accessibilityHint="@sentry/react"
            accessibilityLabel="@sentry/react"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              @sentry/react
            </Text>
          </View>
          <View
            accessibilityHint="@sentry/react-native"
            accessibilityLabel="@sentry/react-native"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              @sentry/react-native
            </Text>
          </View>
          <View
            accessibilityHint="@xstate/react"
            accessibilityLabel="@xstate/react"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              @xstate/react
            </Text>
          </View>
          <View
            accessibilityHint="bxd"
            accessibilityLabel="bxd"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              bxd
            </Text>
          </View>
          <View
            accessibilityHint="color"
            accessibilityLabel="color"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              color
            </Text>
          </View>
          <View
            accessibilityHint="crypto-js"
            accessibilityLabel="crypto-js"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              crypto-js
            </Text>
          </View>
          <View
            accessibilityHint="dayjs"
            accessibilityLabel="dayjs"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              dayjs
            </Text>
          </View>
          <View
            accessibilityHint="dedent"
            accessibilityLabel="dedent"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              dedent
            </Text>
          </View>
          <View
            accessibilityHint="dripsy"
            accessibilityLabel="dripsy"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              dripsy
            </Text>
          </View>
          <View
            accessibilityHint="i18next"
            accessibilityLabel="i18next"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              i18next
            </Text>
          </View>
          <View
            accessibilityHint="moti"
            accessibilityLabel="moti"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              moti
            </Text>
          </View>
          <View
            accessibilityHint="node-self"
            accessibilityLabel="node-self"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              node-self
            </Text>
          </View>
          <View
            accessibilityHint="react"
            accessibilityLabel="react"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react
            </Text>
          </View>
          <View
            accessibilityHint="react-dom"
            accessibilityLabel="react-dom"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-dom
            </Text>
          </View>
          <View
            accessibilityHint="react-i18next"
            accessibilityLabel="react-i18next"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-i18next
            </Text>
          </View>
          <View
            accessibilityHint="react-native"
            accessibilityLabel="react-native"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native
            </Text>
          </View>
          <View
            accessibilityHint="react-native-document-picker"
            accessibilityLabel="react-native-document-picker"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native-document-picker
            </Text>
          </View>
          <View
            accessibilityHint="react-native-fs"
            accessibilityLabel="react-native-fs"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native-fs
            </Text>
          </View>
          <View
            accessibilityHint="react-native-gesture-handler"
            accessibilityLabel="react-native-gesture-handler"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native-gesture-handler
            </Text>
          </View>
          <View
            accessibilityHint="react-native-get-random-values"
            accessibilityLabel="react-native-get-random-values"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native-get-random-values
            </Text>
          </View>
          <View
            accessibilityHint="react-native-haptic-feedback"
            accessibilityLabel="react-native-haptic-feedback"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native-haptic-feedback
            </Text>
          </View>
          <View
            accessibilityHint="react-native-localize"
            accessibilityLabel="react-native-localize"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native-localize
            </Text>
          </View>
          <View
            accessibilityHint="react-native-modal-datetime-picker"
            accessibilityLabel="react-native-modal-datetime-picker"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native-modal-datetime-picker
            </Text>
          </View>
          <View
            accessibilityHint="react-native-push-notification"
            accessibilityLabel="react-native-push-notification"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native-push-notification
            </Text>
          </View>
          <View
            accessibilityHint="react-native-reanimated"
            accessibilityLabel="react-native-reanimated"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native-reanimated
            </Text>
          </View>
          <View
            accessibilityHint="react-native-safe-area-context"
            accessibilityLabel="react-native-safe-area-context"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native-safe-area-context
            </Text>
          </View>
          <View
            accessibilityHint="react-native-screens"
            accessibilityLabel="react-native-screens"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native-screens
            </Text>
          </View>
          <View
            accessibilityHint="react-native-share"
            accessibilityLabel="react-native-share"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native-share
            </Text>
          </View>
          <View
            accessibilityHint="react-native-sqlite-storage"
            accessibilityLabel="react-native-sqlite-storage"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native-sqlite-storage
            </Text>
          </View>
          <View
            accessibilityHint="react-native-svg"
            accessibilityLabel="react-native-svg"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native-svg
            </Text>
          </View>
          <View
            accessibilityHint="react-native-web"
            accessibilityLabel="react-native-web"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native-web
            </Text>
          </View>
          <View
            accessibilityHint="react-native-webview"
            accessibilityLabel="react-native-webview"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-native-webview
            </Text>
          </View>
          <View
            accessibilityHint="react-query"
            accessibilityLabel="react-query"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              react-query
            </Text>
          </View>
          <View
            accessibilityHint="recoil"
            accessibilityLabel="recoil"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              recoil
            </Text>
          </View>
          <View
            accessibilityHint="setimmediate"
            accessibilityLabel="setimmediate"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              setimmediate
            </Text>
          </View>
          <View
            accessibilityHint="xstate"
            accessibilityLabel="xstate"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#2e2e2e",
                    "fontFamily": "TmoneyRoundWind-ExtraBold",
                    "fontSize": 24,
                    "marginVertical": 0,
                  },
                  undefined,
                  {},
                ]
              }
            >
              xstate
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      style={
        [
          {},
          {
            "gap": 16,
            "paddingBottom": 0,
            "position": "relative",
          },
          undefined,
          {},
          {},
        ]
      }
      withPadding={false}
    >
      <View
        style={
          [
            {
              "flex": 1,
            },
            {
              "elevation": 3,
              "height": 16,
              "left": 0,
              "marginTop": -16,
              "position": "absolute",
              "right": 0,
              "zIndex": 3,
            },
            undefined,
            {},
            {},
          ]
        }
      >
        <RNSVGSvgView
          align="none"
          bbHeight="100%"
          bbWidth="100%"
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "flex": 0,
                "height": "100%",
                "width": "100%",
              },
            ]
          }
          vbHeight={100}
          vbWidth={100}
        >
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
          >
            <RNSVGDefs>
              <RNSVGLinearGradient
                gradient={
                  [
                    0,
                    16777215,
                    1,
                    -1,
                  ]
                }
                gradientTransform={
                  [
                    6.123233995736766e-17,
                    1,
                    -1,
                    6.123233995736766e-17,
                    0,
                    0,
                  ]
                }
                gradientUnits={1}
                name="g"
                x1="0"
                x2="100"
                y1="0"
                y2="0"
              />
            </RNSVGDefs>
            <RNSVGRect
              fill={
                {
                  "brushRef": "g",
                  "type": 1,
                }
              }
              height="100%"
              propList={
                [
                  "fill",
                ]
              }
              width="100%"
              x="0"
              y="0"
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</View>
`;
